import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	static char[][] map;
	static int R,C;
	static int max=0;
	static boolean[] v;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		R=Integer.parseInt(st.nextToken());
		C=Integer.parseInt(st.nextToken());
		map=new char[R][C];
		v=new boolean[26];
		
		for(int i=0;i<R;i++) {
			String s = br.readLine();
			map[i]=s.toCharArray();
		}
		dfs(0,0,1);
		System.out.println(max);
	}

	private static void dfs(int r, int c, int k) {
		int[] dr = {-1,1,0,0};	//상하좌우
		int[] dc = {0,0,-1,1};
		
		v[map[r][c]-'A']=true;
		for(int d=0;d<4;d++) {
			int nr=r+dr[d];
			int nc=c+dc[d];
			
			if(nr>=0 && nr<R && nc>=0 && nc<C) {
				if(!v[map[nr][nc]-'A']) dfs(nr,nc,k+1);
			}
		}
		v[map[r][c]-'A']=false;
		max=Math.max(max, k);
	}

}
