import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {

	static int N, K;
	static int[] visited = new int[100001];

	public static void main(String[] args) {
		Scanner scann = new Scanner(System.in);
		N = scann.nextInt();
		K = scann.nextInt();
		if (N == K) {
			System.out.println(0);
			return;
	    } 
		bfs(N);
	}

	private static void bfs(int n) {
		Queue<Integer> q = new LinkedList<Integer>();
		q.offer(n);
		visited[n]=1;
		
		while (!q.isEmpty()) {
			int temp = q.poll();

			for (int i = 0; i < 3; i++) {
				int next=0;
				
				if (i == 0) {
					next=temp+1;
				} else if (i == 1) {
					next=temp-1;
				} else if (i == 2) {
					next=temp*2;
				}
				
				if(next==K) {
					System.out.println(visited[temp]);
					return;
				}
				if(next>=0 && next<visited.length && visited[next]==0) {
					q.offer(next);
					visited[next]=visited[temp]+1;
				}
			}
		}
	}
}
